[project]
name = "dragonfly-loader"
version = "1.0.1"
description = "Loads releases from the PyPI RSS feed into the Dragonfly Mainframe."
license = {text = "MIT"}
requires-python = ">=3.12,<3.13.dev0"
dependencies = [
  # Core
  "pydantic-settings==2.2.1",
  # PyPI integration
  "letsbuilda-pypi==5.1.0",
]

  [project.optional-dependencies]
  dev = ["pre-commit==4.0.1", "pyright==1.1.385", "ruff==0.7.0"]
  test = ["pytest==8.3.3"]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.scripts]
format = "ruff format"
lint = "ruff check --fix"
type-check = "pyright"
pre-commit = "pre-commit run --all-files"
test = "pytest"
all = {composite = ["format", "lint", "type-check", "test"]}

[tool.pyright]
include = ["src/**/*.py"]

venvPath = "."
venv = ".venv"

[tool.ruff]
preview = false
unsafe-fixes = true
target-version = "py311"
line-length = 120

  [tool.ruff.lint]
  select = ["ALL"]
  ignore = [
    "DOC201", # `return` is not documented in docstring
    "DOC402", # `yield` is not documented in docstring
    "DOC501", # Raised exception `{id}` missing from docstring

    # Conflicting rules with format (https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules)
    'COM812',
    'COM819',
    'D206',
    'D300',
    'E111',
    'E114',
    'E117',
    'ISC001',
    'ISC002',
    'Q000',
    'Q001',
    'Q002',
    'Q003',
    'W191',
  ]

    [tool.ruff.lint.extend-per-file-ignores]
    "docs/*" = [
      "INP001", # (File `docs/*.py` is part of an implicit namespace package. Add an `__init__.py`.) - Docs are not modules
    ]
    "tests/*" = [
      "INP001", # (File `tests/*.py` is part of an implicit namespace package. Add an `__init__.py`.) - Tests are not modules
      "S101",   # (Use of `assert` detected) - Yes, that's the point
      "S105",   # Possible hardcoded password -- Mock access tokens are used in tests.
      "S106",   # Possible hardcoded password -- Mock access tokens are used in tests.
    ]

    [tool.ruff.lint.pydocstyle]
    convention = "numpy"
